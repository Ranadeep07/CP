class Solution {
    public List<List<Integer>> fourSum(int[] nums, int target) {
        List<List<Integer>> resList = new ArrayList<>();
		List<Integer> aList = new ArrayList<>();
		Arrays.sort(nums);
		for (int i = 0; i < nums.length; i++) {
			for (int j = i+1; j < nums.length-1; j++) {
				int start = j+1, end = nums.length - 1;
				while (start < end) {
					if(nums[i]+nums[j]+nums[start]+nums[end] == target) {
						aList = Arrays.asList(nums[i],nums[j],nums[start],nums[end]);
						resList.add(aList);
						int startVal = nums[start];
						while (start < nums.length && nums[start] == startVal) {
							start++;
						}
						int endVal = nums[end];
						while (end > start && nums[end] == endVal) {
							end--;
						}
					}
					
					else if ((nums[i]+nums[j]+nums[start]+nums[end] < target)) {
						start++;
					}
					else {
						end--;
					}
					//Handling Duplicates
					while (j+1 < nums.length && nums[j+1] == nums[j]) {
						j++;
					}
					while (i+1 < nums.length && nums[i+1] == nums[i]) {
						i++;
					}
				}
			}
		}
		return resList;
    }
}
